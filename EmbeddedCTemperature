#include <avr/interrupt.h> // Handling interrupts : HC05 works in interrupt mode 
#include <avr/io.h> // includes the apropriate Input Output definitions
#include <LiquidCrystal.h> // displaying the temperature values

const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

char temp;

void setup() {
lcd.begin(16, 2);

lcd.print("Jimmys Project");

UBRR0 = 103; 
UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00); 
UCSR0B |= (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0);    
sei();// enable global interrupt

DDRC = 0b00000000;
ADMUX = 0b01100000;
ADCSRA = 0b10000111;}


void loop( {
int temperature;
  switch(temp)  
  {
    case '0':
    ADCSRA = ADCSRA | (1 << ADSC);
   
    
    while(ADCSRA & (1 << ADSC)); 


   temperature = ADCH * (5.0 / 1023.0 * 100.0);  
   
  lcd.setCursor(0,1);
  
      
  lcd.print("temp : ");

     temp = 11;
    break;

    case '1':
    
       ADCSRA = ADCSRA | (1 << ADSC);
   
    // Wait until the ADSC bit has been cleared
    while(ADCSRA & (1 << ADSC));

    // convert the voltage value to temperature

   temperature = ADCH * (5.0 / 1023.0 * 100.0);

  lcd.setCursor(7,1);
  lcd.print(temperature);

     temp = 11;
    break;
  }
}

ISR(USART_RX_vect)  
{ 
  temp=UDR0;
}

}

